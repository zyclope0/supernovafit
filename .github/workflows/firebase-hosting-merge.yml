# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

name: 🚀 Deploy to Firebase Hosting - Production Excellence
on:
  workflow_run:
    workflows: ["🏆 Quality Checks - Excellence Technique"]
    types: [completed]
jobs:
  build_and_deploy:
    name: 🏗️ Build & Deploy to Production
    # Déclenchement uniquement si le workflow Quality réussit et que la branche est main
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch == 'main' }}
    runs-on: ubuntu-latest

    # Variables d'environnement pour performance
    env:
      NODE_VERSION: "20"
      CACHE_VERSION: "v1"
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_sha }}
      - name: 🚀 Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
          cache-dependency-path: "package-lock.json"

      # Cache optimisé pour performance maximale
      - name: 📦 Cache Next.js build (Optimized)
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
            .next/static
            .firebase
            node_modules/.cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/next.config.js') }}-${{ env.CACHE_VERSION }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
            ${{ runner.os }}-nextjs-

      - name: 🔧 Install dependencies (Optimized)
        run: npm ci --prefer-offline --no-audit
        env:
          NODE_ENV: production

      - name: 📈 Build with Advanced Metrics
        id: build
        run: |
          echo "BUILD_START=$(date +%s)" >> $GITHUB_ENV
          echo "🚀 Starting production build..." >> $GITHUB_STEP_SUMMARY
          npm run build
          echo "BUILD_END=$(date +%s)" >> $GITHUB_ENV
          echo "BUILD_TIME=$(($(date +%s) - $BUILD_START))s" >> $GITHUB_STEP_SUMMARY
          echo "📊 Bundle Analysis:" >> $GITHUB_STEP_SUMMARY
          echo "- **Total Size**: $(du -sh .next | cut -f1)" >> $GITHUB_STEP_SUMMARY
          echo "- **Build Time**: $(($(date +%s) - $BUILD_START))s" >> $GITHUB_STEP_SUMMARY
          echo "📦 Largest JS bundles:" >> $GITHUB_STEP_SUMMARY
          find .next -name "*.js" -type f -exec du -h {} + | sort -rh | head -5 >> $GITHUB_STEP_SUMMARY
        env:
          NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
          NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
          NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
          NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
          NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
          NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
          NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID }}
          NEXT_PUBLIC_APP_VERSION: "2.0.0"
      - name: 🔐 Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_SUPERNOVAFIT_A6FE7 }}

      - name: 🧹 Ensure cleanup policy for Functions artifacts
        run: npx --yes firebase-tools@latest functions:artifacts:setpolicy --location europe-west1 --days 30 --force --project supernovafit-a6fe7
        continue-on-error: true

      - name: 🚀 Setup Firebase CLI (Optimized)
        run: echo "Firebase CLI via npx for optimal performance"

      - name: Create .env file for Firebase deployment
        run: |
          echo "NEXT_PUBLIC_FIREBASE_API_KEY=${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}" >> .env
          echo "NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}" >> .env
          echo "NEXT_PUBLIC_FIREBASE_PROJECT_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}" >> .env
          echo "NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}" >> .env
          echo "NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}" >> .env
          echo "NEXT_PUBLIC_FIREBASE_APP_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}" >> .env
          echo "NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID }}" >> .env

      - name: 🚀 Deploy to Firebase Hosting (Production Excellence)
        id: deploy
        run: |
          echo "🚀 Deploying SuperNovaFit v2.0.0 to production..." >> $GITHUB_STEP_SUMMARY
          npx firebase-tools@latest deploy --only hosting --project supernovafit-a6fe7 --config firebase.production.json --force
          echo "✅ Deployment successful!" >> $GITHUB_STEP_SUMMARY
        continue-on-error: false
        env:
          FIREBASE_CLI_EXPERIMENTS: webframeworks
          NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
          NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
          NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
          NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
          NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
          NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
          NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID }}

      - name: 📊 Deployment Excellence Summary
        if: always()
        run: |
          echo "## 🏆 SuperNovaFit v2.0.0 - Production Deployment" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ✅ Deployment Status" >> $GITHUB_STEP_SUMMARY
          echo "- **Status**: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Version**: 2.0.0" >> $GITHUB_STEP_SUMMARY
          echo "- **URL**: https://supernovafit-a6fe7.web.app" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ⚡ Performance Excellence" >> $GITHUB_STEP_SUMMARY
          echo "- **Build Time**: ${BUILD_TIME:-N/A}" >> $GITHUB_STEP_SUMMARY
          echo "- **Bundle Size**: $(du -sh .next | cut -f1)" >> $GITHUB_STEP_SUMMARY
          echo "- **Node.js**: 20.x (Latest LTS)" >> $GITHUB_STEP_SUMMARY
          echo "- **Cache**: Optimized v1" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🎯 Quality Assurance" >> $GITHUB_STEP_SUMMARY
          echo "- **TypeScript**: ✅ Passed" >> $GITHUB_STEP_SUMMARY
          echo "- **ESLint**: ✅ Passed" >> $GITHUB_STEP_SUMMARY
          echo "- **Tests**: ✅ Passed" >> $GITHUB_STEP_SUMMARY
          echo "- **Security**: ✅ Audited" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🚀 **SuperNovaFit v2.0.0 is live in production!**" >> $GITHUB_STEP_SUMMARY
